#check if marineHeatWaves is working

t = pd.date_range("2000-01-01", periods=40, freq="D")
ords = np.array([d.toordinal() for d in t], dtype=int)
temp = 25 + np.sin(np.linspace(0, 6.28, 40)); temp[15:25] += 2

res, clim = mhw.detect(ords, temp, climatologyPeriod=[2000, 2000],
                       pctile=90, minDuration=5, joinAcrossGaps=True)
print("events:", len(res.get("time_start", [])))

# Verifies that core libs are importable and compatible with marineHeatWaves.

from importlib import import_module

want = [
    "numpy", "pandas", "xarray", "dask", "bottleneck",
    "netCDF4", "cftime", "marineHeatWaves"
]
vers = {}
problems = []

for m in want:
    try:
        import_module(m)
        # distribution name may differ; fall back to __version__
        try:
            vers[m] = version(m)
        except PackageNotFoundError:
            mod = import_module(m)
            vers[m] = getattr(mod, "__version__", "unknown")
    except Exception as e:
        problems.append((m, str(e)))
        vers[m] = "IMPORT FAILED"

print("== Package versions ==")
for k in want:
    print(f"{k:16s} : {vers[k]}")

if problems:
    print("\n[ENV WARNING] Some packages failed to import:")
    for m, msg in problems:
        print(f" - {m}: {msg}")

# Minimal API sanity: marineHeatWaves.detect accepts ordinal ints + 1D temp array
try:
    import numpy as np
    import marineHeatWaves as mhw
    # make a synthetic 40-day series with a warm spell
    days = np.array([pd.Timestamp("2000-01-01") + pd.Timedelta(i, "D") for i in range(40)])
    ords = np.array([d.toordinal() for d in days], dtype=int)
    temp = 25 + np.sin(np.linspace(0, 6.28, 40))
    temp[15:25] += 2.0  # warm event

    res, clim = mhw.detect(
        ords, temp,
        climatologyPeriod=[1991, 2020],
        pctile=90, minDuration=5, joinAcrossGaps=True
    )
    print("\nmarineHeatWaves.detect sanity: OK")
    print(f"Detected events: {len(res.get('time_start', []))}")
except Exception as e:
    print("\n[ENV ERROR] marineHeatWaves.detect sanity check failed:", e)
